name: Deploy Python app to EC2

on:
  workflow_dispatch:  # Manual trigger with inputs
    inputs:
      instance_id:
        description: 'EC2 Instance ID'
        required: true
        type: string
      environment:
        description: 'Deployment environment (dev, prod)'
        required: true
        default: 'prod'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code (updated to v4)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python (updated to v4)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run Safety
      - name: Run Safety (CVE Scan)
        run: |
          pip install safety
          safety check -r requirements.txt --full-report > safety_report.txt || true
        continue-on-error: true

      # Step 5: Upload Safety report (updated to v4)
      - name: Upload Safety scan report
        uses: actions/upload-artifact@v4
        with:
          name: safety-report
          path: safety_report.txt

      # Step 6: Run Bandit
      - name: Run Bandit (Security Scan)
        run: |
          pip install bandit
          bandit -r . -o bandit_report.html || true
        continue-on-error: true

      # Step 7: Upload Bandit report (updated to v4)
      - name: Upload Bandit scan report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.html

      # Step 8: Deploy to EC2 via SSM (using correct action)
      - name: Deploy to EC2 via SSM
        uses: aws-actions/amazon-ec2-run-command@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # e.g., us-east-1
          instance-ids: ${{ github.event.inputs.instance_id }}  # Use workflow input
          document-name: AWS-RunShellScript
          commands: |
            cd /opt/myapp
            git pull origin main
            python3 -m venv myapp --clear
            source myapp/bin/activate
            pip install -r requirements.txt
          comment: "Deploying to ${{ github.event.inputs.environment }} environment"