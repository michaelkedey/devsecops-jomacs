name: Secure Deployment via Bastion

on:
  workflow_dispatch:
    inputs:
      bastion_ip:
        description: 'Bastion Public IP'
        required: true
        type: string
      ec2_ip:
        description: 'EC2 Private IP'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout Code from GitHub
    - name: Checkout Code
      uses: actions/checkout@v2

    # 2. Set up SSH key and establish SSH Tunnel
    - name: Set up SSH tunnel and deploy code
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        BASTION: ${{ inputs.bastion_ip }}
        HOST: ${{ inputs.ec2_ip }}
        USER: ${{ secrets.EC2_USER }}
        PORT: ${{ secrets.SSH_PORT }}
      run: |
        # Save the SSH key to a file and set permissions
        echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
        
        # Establish the SSH tunnel from GitHub Actions to the target EC2 instance
        # This command forwards the local port 2222 to the target EC2 instance's SSH (port 22)
        ssh -i private_key.pem -o StrictHostKeyChecking=no -t -L 2222:${HOST}:${PORT} -p ${PORT} ${USER}@${BASTION} -N -f
        # ssh -i private_key.pem -L 2222:${HOST}:22 -p ${PORT} ${USER}@${BASTION} -N -f
        
        # Verify the tunnel is up (checking that we can connect to the local port 2222)
        timeout 20 bash -c 'until nc -z localhost 2222; do sleep 1; done'

    # 3. Deploy code and start the application on the EC2 instance
    - name: Deploy app and start Gunicorn
      uses: appleboy/ssh-action@master
      with:
        host: localhost  # Connect to local port 2222, which forwards to the EC2 instance
        username: ${{ secrets.EC2_USER }}
        key: ./private_key.pem
        port: 2222  # Use the local port of the tunnel
        script: |
          # Create directory on the target EC2 instance if it doesn't exist
          mkdir -p /home/${{ secrets.EC2_USER }}/my-app/
          
          # Copy the application code (app/python) to the EC2 instance using SCP
          rsync -avz -e "ssh -p 2222" ./app/python/ ${{ secrets.EC2_USER }}@localhost:/home/${{ secrets.EC2_USER }}/my-app/
          
          # Install the required dependencies and start Gunicorn
          cd /home/${{ secrets.EC2_USER }}/my-app/python
          pip install -r requirements.txt
          nohup gunicorn -w 4 -b 0.0.0.0:80 app:app > gunicorn.log 2>&1 &

    # 4. Clean up SSH tunnel
    - name: Clean up SSH tunnel
      run: pkill -f "ssh -L 2222"
