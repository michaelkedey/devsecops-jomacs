name: Secure Deployment via Bastion

on:
  workflow_dispatch:
    inputs:
      bastion_ip:
        description: 'Bastion Public IP'
        required: true
        type: string
      ec2_ip:
        description: 'EC2 Private IP'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to EC2
      env:
        EC2: ${{ inputs.ec2_ip }}
        BASTION: ${{ inputs.bastion_ip }}
        EC2_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        USER: ${{ secrets.EC2_USER }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        echo "$EC2_PRIVATE_KEY" > github-ec2.pem
        chmod 600 github-ec2.pem
        
        # SSH into Bastion Host and execute commands
        ssh -o StrictHostKeyChecking=no -i github-ec2.pem -p ${SSH_PORT} ${USER}@${BASTION} << 'EOF'
          echo "Current directory: $(pwd)"
          echo "Listing home directory:"
          ls -la ~
        EOF


# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Copy Files via Bastion
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ inputs.ec2_ip }}       # Use private IP directly
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           port: 8008
#           source: "app/python/"
#           target: "/home/ubuntu/my-app/"
#           proxy_host: ${{ inputs.bastion_ip }}  # Bastion IP
#           proxy_port: 8008
#           proxy_username: ubuntu
#           proxy_key: ${{ secrets.EC2_SSH_KEY }}     # Same key for bastion

#       - name: Start Application
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ inputs.ec2_ip }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           port: 8008
#           proxy_host: ${{ inputs.bastion_ip }}
#           proxy_port: 8008
#           proxy_username: ubuntu
#           proxy_key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd /home/ubuntu/my-app/python
#             nohup gunicorn -w 4 -b 0.0.0.0:80 app:app > /dev/null 2>&1 &






# name: Deploy App to EC2

# on:
#   workflow_dispatch:
#     inputs:
#       bastion_public_ip:
#         description: 'Bastion Public IP'
#         required: true
#         type: string
#       ec2_private_ip:
#         description: 'EC2 Private IP'
#         required: true
#         type: string
#       environment:
#         description: 'Deployment environment (dev, prod)'
#         required: true
#         default: 'prod'

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       # 1. Checkout Code from GitHub
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       # 2. Set up SSH key for Bastion Host
#       - name: Set up SSH key
#         run: |
#           echo "$EC2_EC2_EC2_SSH_KEY" > private_key.pem
#           chmod 600 private_key.pem

#       # 3. Copy app/python code to EC2 via Bastion Host
#       - name: Copy app/python code to EC2 via Bastion Host
#         run: |
#           # SSH into the Bastion Host and copy the app/python directory to the EC2 instance
#           ssh -i private_key.pem -o StrictHostKeyChecking=no -p 8008 ubuntu@$BASTION_PUBLIC_IP << 'EOF'
#             # Use SCP to copy the app/python directory from GitHub Actions runner to the EC2 instance
#             scp -i private_key.pem -r ./app/python ubuntu@$EC2_PRIVATE_IP:/home/ubuntu/my-app/python
#             # Run the app on the EC2 instance
#             ssh -i private_key.pem -p 8008 ubuntu@$EC2_PRIVATE_IP << 'INNER_EOF'
#               cd /home/ubuntu/my-app/python
#               gunicorn -w 4 -b 0.0.0.0:80 app:app &
#             INNER_EOF
#           EOF

#       # 4. Clean up private key
#       - name: Clean up private key
#         run: rm -f private_key.pem


        
